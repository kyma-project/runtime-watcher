name: TestSuite E2E

permissions: { }

on:
  workflow_dispatch:
    inputs:
      k8s_version:
        description: With Kubernetes version
        required: false
      runtime-watcher-tag:
        description: With runtime-watcher image tag
        required: false
        default: latest
      runtime-watcher-repo:
        description: With runtime-watcher image repository
        required: false
        type: choice
        default: prod
        options:
          - dev
          - prod
  pull_request:
    types: [ opened, edited, synchronize, reopened, ready_for_review ]

jobs:
  get-custom-tags:
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.get_custom_tags.outputs.tags }}
    steps:
      # PR always uses head sha
      - name: Get tags
        id: get_custom_tags
        run: |
          tags="${{ github.event.inputs.runtime-watcher-tag }}"
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            tags="${{ github.event.pull_request.head.sha }}"
          fi
          echo "Using custom tags: '$tags'"
          echo "tags=$tags" >> $GITHUB_OUTPUT
  get-image-repo:
    runs-on: ubuntu-latest
    outputs:
      image_repo: ${{ steps.set_image_repo.outputs.image_repo }}
    steps:
      # PR always uses 'dev' repo
      - name: Set image repo
        id: set_image_repo
        run: |
          repo="${{ github.event.inputs.runtime-watcher-repo }}"
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            repo="dev"
          fi

          image_repo="europe-docker.pkg.dev/kyma-project/${repo}"

          echo "Using image repo: '$image_repo'"
          echo "image_repo=$image_repo" >> $GITHUB_OUTPUT
  wait-for-image-build:
    needs:
      - get-custom-tags
      - get-image-repo
    name: Wait for image build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Wait for the Docker image
        timeout-minutes: 20
        env:
          ITERATIONS: 40
          SLEEP_SECONDS: 30
        run: ./.github/scripts/release/wait_for_image.sh ${{ needs.get-image-repo.outputs.image_repo }}/runtime-watcher:${{ needs.get-custom-tags.outputs.tags }} ${{ env.ITERATIONS }} ${{ env.SLEEP_SECONDS}}
  e2e-integration:
    name: E2E
    needs:
      - wait-for-image-build
      - get-custom-tags
      - get-image-repo
    strategy:
      matrix:
        e2e-test:
          - watcher-enqueue
          - watcher-metrics
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout runtime-watcher
        uses: actions/checkout@v5

      - name: Checkout lifecycle-manager
        uses: actions/checkout@v5
        with:
          repository: kyma-project/lifecycle-manager
          path: lifecycle-manager

      - name: Get configuration
        uses: kyma-project/lifecycle-manager/.github/actions/get-configuration@main
        id: configuration
  
      - name: Setup tools
        uses: kyma-project/lifecycle-manager/.github/actions/setup-tools@main
        with:
          k8s_version: ${{ steps.configuration.outputs.k8s_version }}
          istio_version: ${{ steps.configuration.outputs.istio_version }}
          k3d_version: ${{ steps.configuration.outputs.k3d_version }}
          modulectl_version: ${{ steps.configuration.outputs.modulectl_version }}
          go-version-file: runtime-watcher/go.mod
          cache-dependency-path: runtime-watcher/go.sum

      - name: Setup test clusters
        uses: kyma-project/lifecycle-manager/.github/actions/setup-test-clusters@main
        with:
          k8s_version: ${{ steps.configuration.outputs.k8s_version }}
          cert_manager_version: ${{ steps.configuration.outputs.cert_manager_version }}

      - name: Additional test cluster configuration
        run: |
          k3d cluster edit skr --port-add 9090:9090@loadbalancer

      - name: Patch lifecycle-manager
        uses: ./.github/actions/patch-lifecycle-manager
        with:
          runtime-watcher-tag: ${{ needs.get-custom-tags.outputs.tags }}
          runtime-watcher-image-registry: ${{ needs.get-image-repo.outputs.image_repo }}

      - name: Deploy lifecycle-manager
        uses: kyma-project/lifecycle-manager/.github/actions/deploy-lifecycle-manager@main
        with:
          klm_version_tag: latest
          klm_image_repo: prod

      - name: Run '${{ matrix.e2e-test }}' test
        working-directory: runtime-watcher
        run: |
          make -C tests/e2e ${{ matrix.e2e-test }}
